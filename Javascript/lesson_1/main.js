// variable
var nameOfSchool = "FPT University";
var age = 19;


/* built-in function
1. Alert
2. Console
3. Confirm
4. Prompt
5. Set timeout
6. Set interval
*/


/* Gi·ªõi thi·ªáu v·ªÅ to√°n t·ª≠ trong Javascript
1. To√°n t·ª≠ s·ªë h·ªçc - Arithmetic
2. To√°n t·ª≠ g√°n - Assignment
3. To√°n t·ª≠ so s√°nh - Comparison
4. To√°n t·ª≠ logic - Logical
*/


/* To√°n t·ª≠ s·ªë h·ªçc 
   +   C·ªông
   -   Tr·ª´
   *   Nh√¢n
   **  Lu·ªπ th·ª´a
   /   Chia
   %   Chia l·∫•y s·ªë d∆∞
   ++  TƒÉng 1 gi√° tr·ªã s·ªë
   --  Gi·∫£m 1 gi√° tr·ªã s·ªë
*/

/**  To√°n t·ª≠ g√°n
  To√°n t·ª≠                    V√≠ d·ª•                    T∆∞∆°ng ƒë∆∞∆°ng
    =                        x = y                    x = y
    +=                       x += y                   x = x + y
    -=                       x -= y                   x = x - y
    *=                       x *= y                   x = x * y
    /=                       x /= y                   x = x / y
    **=                      x **= y                  x = x ** y
*/



/* ƒê√¢y l√† 2 to√°n t·ª≠ nghe qua th√¨ r·∫•t d·ªÖ hi·ªÉu, nh∆∞ng ƒë·ªÉ hi·ªÉu nguy√™n l√Ω v·ªÅ c√°ch ho·∫°t ƒë·ªông c·ªßa n√≥ ch√∫ng ta s·∫Ω ph·∫£i m·∫•t th√™m m·ªôt ch√∫t th·ªùi gian ƒë√≥. ƒê·ªÉ ho√†n th√†nh b√†i h·ªçc v·ªÅ 2 to√°n t·ª≠ n√†y, ch√∫ng ta s·∫Ω c√πng tr·∫£i qua m·ªôt s·ªë b√†i h·ªçc sau nh√©.

Ok, b·∫Øt ƒë·∫ßu th√¥i!
To√°n t·ª≠ ++
To√°n t·ª≠ ++ gi√∫p tƒÉng gi√° tr·ªã c·ªßa m·ªôt bi·∫øn mang gi√° tr·ªã s·ªë l√™n 1. C√≥ 2 c√°ch ƒë·ªÉ s·ª≠ d·ª•ng to√°n t·ª≠ ++ l√†:

D√πng l√†m h·∫≠u t·ªë: variable++ (to√°n t·ª≠ n·∫±m sau bi·∫øn)
D√πng l√†m ti·ªÅn t·ªë: ++variable (to√°n t·ª≠ n·∫±m tr∆∞·ªõc bi·∫øn)
#1 S·ª≠ d·ª•ng ++ l√†m h·∫≠u t·ªë
·ªû ƒë√¢y, ch√∫ng ta s·∫Ω x√©t v√≠ d·ª• s·ª≠ d·ª•ng to√°n t·ª≠ ++ l√†m h·∫≠u t·ªë tr∆∞·ªõc (v√¨ trong th·ª±c t·∫ø, ch√∫ng ta th∆∞·ªùng d√πng ki·ªÉu h·∫≠u t·ªë nhi·ªÅu h∆°n):  */
var number = 1;

number++; // d√πng l√†m h·∫≠u t·ªë, ++ ·ªü ph√≠a sau bi·∫øn
console.log(number); // 2

number++;
console.log(number); // 3
/* Sau m·ªói khi s·ª≠ d·ª•ng to√°n t·ª≠ ++, gi√° tr·ªã c·ªßa bi·∫øn number ƒë∆∞·ª£c tƒÉng l√™n 1. C√≥ v·∫ª kh√° d·ªÖ d√†ng ƒë·ªÉ hi·ªÉu c√°ch ho·∫°t ƒë·ªông c·ªßa n√≥ ph·∫£i kh√¥ng?

Tuy nhi√™n, h√£y xem x√©t th√™m v√≠ d·ª• sau: */
var number = 1;

console.log(number++); // 1
console.log(number); // 2

console.log(number++); // 2
console.log(number); // 3
/*üëâ To√°n t·ª≠ ++ khi d√πng l√† h·∫≠u t·ªë s·∫Ω tƒÉng gi√° tr·ªã c·ªßa bi·∫øn l√™n 1 v√† tr·∫£ v·ªÅ gi√° tr·ªã tr∆∞·ªõc khi tƒÉng. */
/* 
#2 S·ª≠ d·ª•ng ++ l√†m ti·ªÅn t·ªë
·ªû v√≠ d·ª• n√†y, ch√∫ng ta s·ª≠ d·ª•ng ++ l√†m ti·ªÅn t·ªë. Tuy nhi√™n, k·∫øt qu·∫£ tr√¥ng s·∫Ω kh√¥ng kh√°c g√¨ khi d√πng ++ l√†m h·∫≠u t·ªë:

var number = 1;

++number; // d√πng l√†m ti·ªÅn t·ªë, ++ ·ªü ph√≠a tr∆∞·ªõc bi·∫øn
console.log(number); // 2

++number;
console.log(number); // 3
Nh∆∞ng khi xem x√©t k·ªπ h∆°n, c√°c b·∫°n s·∫Ω nh√¨n ra ƒëi·ªÉm kh√°c: */
var number = 1;


/* üëâ To√°n t·ª≠ ++ khi d√πng l√† ti·ªÅn t·ªë s·∫Ω tƒÉng gi√° tr·ªã c·ªßa bi·∫øn l√™n 1 v√† tr·∫£ v·ªÅ gi√° tr·ªã sau khi tƒÉng. */
console.log("Note");
// Prefix & Postfix

/** Postfix
 // Vi·ªác 1: a copy , a copy = 6
 // Vi·ªác 2: Tr·ª´ 1 c·ªßa a, a = a - 1 ==> a = 5
 // Vi·ªác 3: Tr·∫£ v·ªÅ a copy
 */
var a = 9;
var output = a++;
console.log(output);
console.log(a);
/* Mu·ªën tr·∫£ v·ªÅ gi√° tr·ªã c·ªßa a th√¨ ph·∫£i console.log(a) */
var number = 5;
var output = number++ + --number;
console.log(output);
/* number++ th√¨ s·∫Ω gi·ªØ nguy√™n l√† 5 , --number l√† tr·ª´ ƒëi 1 gi√° tr·ªã sau ƒë√≥ c·ªßa number , t·ª©c l√† (5 + 1) - 1 = 5 
=> 5 + 5 = 10 
*/ 
var output = ++number * 2 - number-- * 2
console.log(output);
// 6 * 2 - 6 * 2 = 0

/**
 * To√°n t·ª≠ chu·ªói - String operator
 */
var firstName = "Ha" ;
var lastName  = "Truong";
console.log(firstName + ' '+ lastName);

var name = "Truong";
lastName = "Ha";
name += " "+ lastName
console.log(name);

/* To√°n t·ª≠                        √ù nghƒ©a
==                                B·∫±ng
!=                                Kh√¥ng b·∫±ng
>                                 L·ªõn h∆°n
<                                 Nh·ªè h∆°n
>=                                L·ªõn h∆°n ho·∫∑c b·∫±ng
<=                                Nh·ªè h∆°n ho·∫∑c b·∫±ng
*/
var a = 3
var b = 3
var c = "jBoy"
var d = "jBoy"
if (d = c){
    console.log("Dung")
} else {
    console.log("Sai")
}
var isSuccess = a <= b;
console.log(isSuccess);

/**
 * If - else
 */
if (undefined) {
    console.log("Dieu Kien Dung")
} else {
    console.log("Dieu Kien Sai")
}
/**   Value
 * 0
 * false
 * '' - ""
 *  undefined
 * NaN
 * null
 */
// N·∫øu ƒë∆∞a gi√° tr·ªã Value v√†o th√¨ h·∫ßu h·∫øt l√† Ã£(false), tr·ª≠ true l√† (true)

var number = 46;
var soDu = number % 2;
var isSuccess = soDu =! 1;
console.log(isSuccess);

/* To√°n t·ª≠ logic
 1. && - And
 2. || - Or
 3. ! - Not
 */

 /* Ki·ªÉu d·ªØ li·ªáu trong Javascript
 1. D·ªØ li·ªáu nguy√™n thu·ª∑ - Primitive data
    - Number        
    - String 
    - Boolean
    - Underfined
    - Null
    - Symbol

 2. D·ªØ li·ªáu ph·ª©c t·∫°p - Complex Data
    - Function
    - Object
*/

// Number type
var a = 1 ;
var b = 2 ;
var c = 1.5 ;

// String type
var fullName = "Ha Truong";

// Boolean 
var isSuccess = true ;
var isSuccess = false ;

// Underfined
var ages; // kh√¥ng g√°n gi√° tr·ªã
console.log(ages);

// Null


// Symbol
var id = Symbol('id');  // unique
var id2 = Symbol('id2'); // unique
console.log(id == id2);

// Function
var myFunction = function(){
    alert('Hi, hello everyone')
}

// Object types
var myObject = {
    name: 'Ha Truong',
    age: 19,
    address: 'Ha Noi',
    myFunction: function() {

    }
};


console.log(myObject);

var myArray = ["Ha Truong" , "Vietnam", "FPT"];
console.log(myArray);

// To√°n t·ª≠ so s√°nh - P2
/**
 * ===
 * !==
 * 
 */
var a = 3 ;
var b = 5 ;

var result = a < b || a > b 
if (result){
    console.log("True");
} else{
    console.log("False");
}

/* H√†m (function) trong Javascript

1. H√†m ?
  - M·ªôt kh·ªëi m√£
  - L√†m m·ªôt vi·ªác c·ª• th·ªÉ

2. Lo·∫°i h√†m
  - Built-in
  - T·ª± ƒë·ªãnh nghƒ©a

3. T√≠nh ch·∫•t
  - Kh√¥ng th·ª±c thi khi ƒë·ªãnh nghƒ©a
  - S·∫Ω th·ª±c thi khi ƒë∆∞·ª£c g·ªçi
  - C√≥ th·ªÉ nh·∫≠n tham s·ªë
  - C√≥ th·ªÉ tr·∫£ v·ªÅ 1 gi√° tr·ªã

4. T·∫°o h√†m ƒë·∫ßu ti√™n
*/

function autoAlert() {
    console.log("result", result);
    alert("H√†m n√†y ƒë√£ ƒë∆∞·ª£c th·ª±c thi");
   
}
var c = 50;
var d = 100;
var result = c < d && c + 100 > d & " " ;


/* 
1. Tham s·ªë?
    - ƒê·ªãnh nghƒ©a?
    - Ki·ªÉu d·ªØ li·ªáu?
    - T√≠nh private?
    - 1 tham s·ªë
    - Nhi·ªÅu tham s·ªë

2. Truy·ªÅn tham s·ªë
    - 1 tham s·ªë
    - Nhi·ªÅu tham s·ªë

3. Arguments?
    - ƒê·ªëi t∆∞·ª£ng arguments
    - Gi·ªõi thi·ªáu v√≤ng for - of

    */

function logger() {
    var plus = ""
    for (var param of arguments) {
        plus += param ;
    
    }
    console.log(plus);
}
logger("message1- ", "message2- ", "message3- ", "message4 ");

// Return trong h√†m - Javascript c∆° b·∫£n


function plus(a, b) {
    return a / b;
}
result = plus(4 , 4);
console.log(result);

/* M·ªôt s·ªë ƒëi·ªÅu c·∫ßn bi·∫øt v·ªÅ function
1. Khi function ƒë·∫∑t tr√πng t√™n
2. Khai b√°o bi·∫øn trong h√†m
3. ƒê·ªãnh nghƒ©a h√†m trong h√†m
*/

function function1 () {
    function function2 () {
        function function3 (a, b) {
            console.log(a + b);
        }
        function3(7, 8);
    }
    function2();
}
function1();

/* C√°c lo·∫°i function
  1. Declaration function
  2. Expression function
  3. Arrow function
  */

// Declaration function

showMessage();
function showMessage() {
    console.log('Declaration function');
}
// Declaration function c√≥ th·ªÉ ƒë∆∞·ª£c g·ªçi tr∆∞·ªõc khi ƒë·ªãnh nghƒ©a
// Expression function th√¨ kh√¥ng
var showMessage2 = function Message2()  {
    console.log('Expression function')
}
showMessage2();

/* CHU·ªñI TRONG JAVASCRIPT

1. T·∫°o chu·ªói
    - C√°c c√°ch t·∫°o chu·ªói
    - N√™n d√πng c√°ch n√†o? L√Ω do?
    - Ki·ªÉm tra data type
2. M·ªôt s·ªë case s·ª≠ d·ª•ng backslash (\)
3. Xem ƒë·ªô d√†i chu·ªói
4. Ch√∫ √Ω ƒë·ªô d√†i khi vi·∫øt code
5. Template string ES6
*/

//N√™n d√πng c√°ch c∆° b·∫£n nh·∫•t ƒë·ªÉ t·∫°o chu·ªói
var fullName = "Ha Truong"

//Ki·ªÉm tra data type
console.log(typeof fullName);

/** M·ªôt s·ªë case s·ª≠ d·ª•ng backslash
 * Khi mu·ªën th√™m d·∫•u ngo·∫∑c k√©p v√†o trong m·ªôt string
 * Khi mu·ªën th√™m d·∫•u backslash ·ªü cu·ªëi string
 */

// Khi mu·ªën th√™m d·∫•u ngo·∫∑c k√©p v√†o trong m·ªôt string: \ + ' = ' ; \ + " = "
var introduction = '\'jBoy \' is Ha Truong'
console.log(introduction);

// Khi mu·ªën th√™m d·∫•u backslash : \ + \ = \
var introduction = 'jBoy is Ha \\ Truong \\'
console.log(introduction);
 
// Xem ƒë·ªô d√†i chu·ªói
console.log(introduction.length);

//Template string ES6
var firstName = "Truong";
var lastName = "Ha";
var fullName = `jBoy is ${lastName} ${firstName}`
console.log(fullName);

//** L√ÄM VI·ªÜC V·ªöI CHU·ªñI 
var myString = "Welcome to, JS , JS , JS , JS"

// 1. Length

// 2. Find index
console.log(myString.indexOf('JS')) // 12
console.log(myString.indexOf('JS', 14)) // 17
console.log(myString.lastIndexOf('JS')) //27
console.log(myString.search('JS')) // 12
console.log(myString.search('JS', 14))  // 12

//3. Cut string 
console.log(myString.slice(8 , 10)); // to
console.log(myString.slice(0, 10)); // Welcome to
console.log(myString.slice(-2, 0)); // JS (at last) c·∫Øt t·ª´ ph·∫£i sang tr√°i

// 4. Replace
console.log(myString.replace('JS', 'Javascript'));
console.log(myString.replace(/JS/g, 'Javascript'));

// 5. Convert to upper case
console.log(myString.toUpperCase());

//6. Convert to lower case
console.log(myString.toLowerCase());

// 7. Trim (Lo·∫°i b·ªè kho·∫£ng tr·ªëng) 
var myString1 = "    We love Javascript!       "
console.log(myString1.length) // 30 ;
console.log(myString1);
var trim = myString1.trim();
console.log(trim);
console.log(trim.length) // 19 ;

// 8. Split (C·∫Øt t·∫°o th√†nh array t·ª´ nh·ªØng ƒëi·ªÉm chung trong chu·ªói)

var cities = 'New York, Hanoi, Bangkok' ;
console.log(cities.split(', '));
console.log(cities.split(''));

// 9. Get a character by index
var myString2 = "Ha Truong";
console.log(myString2.charAt(6));
console.log(myString2[4]);

var myString3 = "I want to earn money by JS JS C C JS"


/* 
Ki·ªÉu s·ªë (Number) trong Javascript

1. T·∫°o gi√° tr·ªã Number
    - C√°c c√°ch t·∫°o
    - D√πng c√°ch n√†o? T·∫°i sao?
    - Ki·ªÉm tra data type

2. L√†m vi·ªác v·ªõi number
    - To string // Chuy·ªÉn ƒë·ªïi m·ªôt s·ªë th√†nh d·∫°ng string
    - To fixed
*/
// To string
var age = 18 ;
var myString= age.toString();
console.log(myString);
console.log(typeof myString); //string

// To fixed
var number = 433.2;
var fixed = number.toFixed(4);
console.log(fixed);



function isNumber(value) {
    return typeof value === 'number';
}
console.log(isNumber(number));


/* M·∫£ng - array
 1. T·∫°o m·∫£ng
    - C√°ch t·∫°o
    - S·ª≠ d·ª•ng c√°ch n√†o? T·∫°i sao ?
    - Ki·ªÉm tra data type?

 2. Truy xu·∫•t m·∫£ng
    - ƒê·ªô d√†i m·∫£ng
    - L·∫•y ph·∫ßn t·ª≠ theo index
*/

var language =[
    'Javascript' , 
    'Python' ,
    'C'
]
// Ki·ªÉm tra xem c√≥ ph·∫£i m·ªôt array kh√¥ng
console.log(Array.isArray(language)) // true;


/* L√†m vi·ªác v·ªõi Array */


// 1. To string (Chuy·ªÉn array sang string)
console.log(language.toString()); // Javascript,Python,C

// 2. Join (Chuy·ªÉn sang string nh∆∞ng ngƒÉn c√°ch c√°c ph·∫ßn t·ª≠)
console.log(language.join(' - ')) // Javascript - Python - C
console.log(language.join(' ')) // Javascript Python C

// 3. Pop (Xo√° element cu·ªëi v√† tr·∫£ v·ªÅ ph·∫ßn t·ª≠ ƒë√£ xo√°)
console.log(language.pop()); // C
console.log(language); // ['Javascript' , 'Python']
console.log(language.pop()); // Python
console.log(language); // Javascript
console.log(language.pop()); // Javascript
console.log(language); // []
console.log(language.pop())// undefined
console.log(language); // []

// 4. Push (ƒê·∫©y element ƒë∆∞·ª£c th√™m v√†o cu·ªëi c·ªßa array)
var cities1 = ['Ha Noi', 'New York', 'Bang Kok'];
console.log(cities1);
console.log(cities1.push('London', 'Singapore' )) // 5 = length
console.log(cities1); // ['Ha Noi', 'New York', 'Bang Kok', 'London', 'Singapore']
console.log(cities1.push('Berlin')); // 6
console.log(cities1); // ['Ha Noi', 'New York', 'Bang Kok', 'London', 'Singapore', 'Berlin']

// 5. Shift ( Xo√° ph·∫ßn t·ª≠ ƒë·∫ßu m·∫£ng)
cities1.shift()
console.log(cities1)  // ['New York', 'Bang Kok', 'London', 'Singapore', 'Berlin']
console.log(cities1.shift()) // New York
console.log(cities1) // ['Bang Kok', 'London', 'Singapore', 'Berlin']

// 6. Unshift ( Th√™m ph·∫ßn t·ª≠ v√†o ƒë·∫ßu m·∫£ng)

console.log(cities1); // ['Bang Kok', 'London', 'Singapore', 'Berlin']
cities1.unshift('Seoul' , 'Berlin');
console.log(cities1); // ['Seoul', 'Berlin', 'Bang Kok', 'London', 'Singapore', 'Berlin']
 
// 7. Splicing ( Ch√®n ho·∫∑c xo√° ph·∫ßn t·ª≠ ·ªü m·ªôt v·ªã tr√≠ ƒë∆∞·ª£c ch·ªçn v√† cho k·∫øt qu·∫£ l√† ph·∫ßn t·ª≠ sau khi ƒë∆∞·ª£c c·∫Øt)
 
/*  array.splice(a, b, c) 
     a l√† v·ªã tr√≠ con tr·ªè 
     b l√† s·ªë ph·∫ßn t·ª≠ b·ªã xo√°
     c l√† ph·∫ßn t·ª≠ ƒë∆∞·ª£c th√™m
     */
    cities1.splice(1 , 1);
    console.log(cities1); // ['Seoul', 'Bang Kok', 'London', 'Singapore', 'Berlin']
    cities1.splice(1, 2);
    console.log(cities1); // ['Seoul', 'Singapore', 'Berlin']
    cities1.splice(2, 0 ,'Melbourne', 'Toronto');
    console.log(cities1); // ['Seoul', 'Singapore', 'Melbourne', 'Toronto', 'Berlin']
    cities1.splice(0, 2, 'Tokyo');
    console.log(cities1) // ['Tokyo', 'Melbourne', 'Toronto', 'Berlin']

// 8. Concat ( N·ªëi c√°c arrays l·∫°i v·ªõi nhau)
    var cities2 = ['Nha Trang', 'Ho Chi Minh', 'Shanghai'];
    console.log(cities1.concat(cities2)); // ['Tokyo', 'Melbourne', 'Toronto', 'Berlin', 'Nha Trang', 'Ho Chi Minh', 'Shanghai']
    console.log(cities2.concat(cities1.concat(age))); // ['Nha Trang', 'Ho Chi Minh', 'Shanghai', 'Tokyo', 'Melbourne', 'Toronto', 'Berlin', 18]
    console.log(cities2.concat(cities1)); //['Nha Trang', 'Ho Chi Minh', 'Shanghai', 'Tokyo', 'Melbourne', 'Toronto', 'Berlin']

// 9. Slicing (C·∫Øt ƒëi ph·∫ßn t·ª≠ t·ª´ v·ªã tr√≠ b·∫Øt ƒë·∫ßu v√† k·∫øt th√∫c ƒë∆∞·ª£c ch·ªçn v√† cho k·∫øt qu·∫£ l√† ph·∫ßn t·ª≠ ƒë√£ c·∫Øt)

    console.log(cities2.slice(0, 1)) // ['Nha Trang']
    console.log(cities1) // ['Tokyo', 'Melbourne', 'Toronto', 'Berlin']
    console.log(cities1.slice(1, 3)) // ['Melbourne', 'Toronto']


/* Object trong Javascript */

// Khai b√°o ƒë·ªãnh nghƒ©a key v√† value
var nickName = 'nick-name'
var info = {
    name: 'Ha Truong',
    school: 'FPT University',
    age: 19,
    getName : function() {
        return this.name
    },
}
console.log(info);
console.log(info.getName())

// Th√™m m·ªôt c·∫∑p key v√† value sau khi t·∫°o object
info.email = 'youngboy321000@gmail.com';
console.log(info); //{name: 'Ha Truong', school: 'FPT University', age: '19', email: 'youngboy321000@gmail.com'}
info['old-email'] = 'truonggioitoan@gmail.com';
console.log(info);
info[nickName] = 'JBoy' ;
console.log(info);


// In value
console.log(info.age); // 19
console.log(info.school); // FPT University
console.log(info['old-email']); // truonggioitoan@gmail.com


// Xo√° value
delete info.age;
console.log(info);
delete info[nickName];
console.log(info)

// Khai b√°o function trong value

// Function --> Ph∆∞∆°ng th·ª©c (method)
// Other --> Thu·ªôc t√≠nh (property)

// Object constructor
function student(firstName, lastName, nationality, school) {
    this.firstName = firstName;
    this.lastName = lastName;
    this.nationality = nationality;
    this.school = school; 
}

var Ha_Truong = new student('Truong', 'Ha', 'Viet Nam', 'FPT University');
var Kim_Jong_Un = new student('Jong Un', 'Kim', 'North Korea', 'Seoul University');
student.prototype.major = 'Software Engineer'
console.log(Ha_Truong);
console.log(Kim_Jong_Un);
student.prototype.getNationality = function() {
    return this.nationality; 
}
console.log(Ha_Truong.getNationality());

// ƒê·ªëi t∆∞·ª£ng date

var date = new Date();
var day = date.getDate() ;
var month = date.getMonth() + 1 ; 
var year = date.getFullYear() ;
console.log(day);
var fullDate = `${day}/ ${month}/ ${year}`;
console.log(fullDate);



var date = new Date();
function getNextYear() {
    return date.getFullYear() + 1
}
console.log(getNextYear());

function getNextYear() {
    return new Date().getFullYear() + 1 
}
console.log(getNextYear());
// Nh·ªØng gi√° tr·ªã b·∫•t bi·∫øn th√¨ k n√™n th√™m bi·∫øn v√†o


/* Math object 
*/

// Math.PI  // T·∫°o ra s·ªë pi
console.log(Math.PI); // 3.141592653589793

// Math.round() // L√†m tr√≤n
console.log(Math.round(23.432321)); // 23
console.log(Math.round(41.7634343)); // 42

// Math.abs()  // L·∫•y gi√° tr·ªã tuy·ªát ƒë·ªëi
console.log(Math.abs(32));  // 32
console.log(Math.abs(-98)); // 98

// Math.ceil() // L√†m tr√≤n tr√™n 
console.log(Math.ceil(42.2321123)); // 43
console.log(Math.ceil(165.0000001)) // 166

// Math.floor() // L√†m tr√≤n d∆∞·ªõi
console.log(Math.floor(64.9999999999)) // 64
console.log(Math.floor(322.5434212)) // 322

// Math.random() // L·∫•y m·ªôt gi√° tr·ªã b·∫•t k√¨ t·ª´ 0 ƒë·∫øn 1 
console.log(Math.random()) // 0.22291123537142332 ;

// Math.max() // L·∫•y gi√° tr·ªã l·ªõn nh·∫•t
console.log(Math.max(32, 653, 16, -921)) // 653 ;
var number1 = 43;
var number2 = 63;
var number3 = 632
console.log(Math.max(number1, number2, number3)) // 632 ;

// Math.min()  // L·∫•y gi√° tr·ªã nh·ªè nh·∫•t
console.log(Math.min(632, 17, 310, 56, -24, -52)) // -52 ;

// T·∫°o game
var bonus = Math.ceil(Math.random() * 100) ;
if (bonus < 5) {
    console.log('B·∫°n nh·∫≠n ƒë∆∞·ª£c ƒë√° qu√Ω!');
} else{
    console.log('R·∫•t ti·∫øc! B·∫°n kh√¥ng nh·∫≠n ƒë∆∞·ª£c ƒë√° qu√Ω!');
}



var playerPack = ['Ronaldo', 'Messi' , 'Salah', 'Son'];
console.log(playerPack[0]);

// C√¢u l·ªánh r·∫Ω nh√°nh - If else
 


numberArray = number.toString();
function divideBy(a) {
    if (a % 15 === 0) {
        return 3
    } else if (a % 5 === 0) {
        return 2
    } else if (a % 3 === 0) {
        return 1
    }
}
console.log(divideBy(15));

// If - else s·ª≠ dung khi so s√°nh t√≠nh ƒë√∫ng sai v√† c√≥ √≠t gi√° tr·ªã



/* C√¢u l·ªánh r·∫Ω nh√°nh */

// Switch case s·ª≠ d·ª•ng khi cho gi√° tr·ªã cho tr∆∞·ªõc v√† c√≥ nhi·ªÅu gi√° tr·ªã
var day = 9;
switch(day) {
    case 2:
        console.log('H√¥m nay l√† th·ª© hai');
        break;
    case 3:
        console.log('H√¥m nay l√† th·ª© ba');
        break;
    case 4:
        console.log('H√¥m nay l√† th·ª© t∆∞');
        break;
    case 5:
        console.log('H√¥m nay l√† th·ª© nƒÉm');
        break;
    case 6:
        console.log('H√¥m nay l√† th·ª© s√°u');
        break;
    case 7:
        console.log('H√¥m nay l√† th·ª© b·∫£y');
        break;
    default: 
        console.log('Kh√¥ng c√≥ gi√° tr·ªã');
        break;
}

// To√°n t·ª´ 3 ng√¥i
var value = 3;
var comparison = value > 3 ? 'S·ªë n√†y l·ªõn h∆°n 3' : 'S·ªë n√†y nh·ªè h∆°n ho·∫∑c b·∫±ng 3';
console.log(comparison);


var playerPack = ['Ronaldo', 'Messi', 'Vinicius', 'Salah', 'Ronaldinho'];
function getPlayer(array) {
    var random = Math.random() * array.length;
    var getNumber = Math.floor(random) ;
    return playerPack[getNumber] ;
}
var player = getPlayer(playerPack);
var favoritePlayer = player === 'Messi' || player === 'Ronaldo' ? 'This is my favorite player' : 'This is not my favorite player'
console.log(player);
console.log(favoritePlayer);



function getCanVoteMessage(age) {
    var canVote = age >= 18 ? "B·∫°n c√≥ th·ªÉ b·ªè phi·∫øu" : "B·∫°n ch∆∞a ƒë∆∞·ª£c b·ªè phi·∫øu";
    return canVote
}
console.log(getCanVoteMessage());

/* V√≤ng l·∫∑p - Loop 

1. for - L·∫∑p v·ªõi ƒëi·ªÅu ki·ªán ƒë√∫ng
2. for/in - L·∫∑p qua key c·ªßa ƒë·ªëi t∆∞·ª£ng (array, string, object)
3. for/of - L·∫∑p qua value c·ªßa ƒë·ªëi t∆∞·ª£ng.
4. while - L·∫∑p khi ƒëi·ªÅu ki·ªán ƒë√∫ng
5. do/while - L·∫∑p √≠t nh·∫•t 1 l·∫ßn, sau ƒë√≥ l·∫∑p khi ƒëi·ªÅu ki·ªán ƒë√∫ng
*/

// For loop




function getRandNumbers(min, max, length) {
    var getNumber = min + (max - min) * Math.random();
    var numberArray = [];
    for (var i = 0; i < length; i++) {
        numberArray[i] = getNumber ;
    }
    return numberArray;
}
var numbers = [23, 42, 19]; 
/*
// i = 0
var getTotal = number[0];
// i = 1
var getTotal = (number[0]) + number[1];
// i = 2
var getTotal 
*/

function getTotal(numbers) {
    var getTotal = 0;
    for (var i = 0; i < numbers.length; i++) {
        getTotal = getTotal + numbers[i];
    }
    return getTotal
}
var numbers = [45, 11, 86];
console.log(getTotal(numbers));


function getTotal(arr) {
    var getTotal = 0;
    for (var i = 0; i < arr.length ; i++) {
        getTotal = getTotal + arr[i]
    }
    return getTotal
}


var orders = [
    {
        name: 'Kh√≥a h·ªçc HTML - CSS Pro',
        price: 3000000
    },
    {
        name: 'Kh√≥a h·ªçc Javascript Pro',
        price: 2500000
    },
    {
        name: 'Kh√≥a h·ªçc React Pro',
        price: 3200000
    }
]

function getTotal(order) {
    var price = 0;
    for (var i = 0; i < order.length; i++) {
        price = price + order[i].price; 
    }
    return price;
}
console.log(getTotal(orders))

/* For/ in loop
// Key c·ªßa array l√† s·ªë

*/
// Objects


var myObject = {
    item : 'riverOfBlood',
    price : 60000,
    ashofWar: 'Bloody Slash',
}
for (var details in myObject){
    console.log(myObject[details]);
}

// Array
var myArray = ['Ha truong', 19, 'FPT University', 'JBOY'];
for (var introduction in myArray) {
    console.log(introduction);
    console.log(myArray[introduction]);
}

// String
var myString = 'My name is Ha Truong';
for (var introduce in myString) {
    console.log(myString[introduce]);
}

function run(object) {

}

function run(object) {
    return object
}

var vanA = {
    name: 'Nguyen Van A',
    age: 16,
}
for (var infor in vanA) {
    console.log(`Thu·ªôc t√≠nh ${infor} c√≥ gi√° tr·ªã ${vanA[infor]}`)
}
function run(object) {
    return object
}

// For - of loop (L·∫•y ra value)

// String
var name = 'Ha Truong';
for (var value of name) {
    console.log(value);
}
// Array
var array = ['Ha Truong', 19, 'FPT'];
for (var value of array) {
    console.log(value);
}

// Object
var information = {
    name : 'Ha Truong',
    age: 19,
    university: 'FPT',
    nationality: 'Viet Nam',
}
for (var value of Object.values(information)) {
    console.log(value);
}
for (value of Object.keys(information)) {
    console.log(value);
}
/* V√≤ng l·∫∑p while
while (ƒëi·ªÅu ki·ªán) {
    // Kh·ªëi m√£ th·ª±c thi
}  */
var i = 0;
while (i < 1000) {
    i++ ;
    console.log(i);
}
var i = 0;
while (i < array.length) {
    console.log(array[i]);
    i++
}

// Do - while loop
var i = 0;
do {
    i++ ; 
    console.log(i);
} while(i < 1000);

// break, continue
for ( var i = 0; i <= 10 ; i++) {
    if (i % 2 === 0) {
        console.log(i);
    }

}
for (var i = 0; i <= 10 ; i++) {
    if (i % 2 !== 0){
        console.log(i);
    }
}
for (var i = 0; i <= 10; i ++) {
    if (i % 2 !== 0){

    } else {
        console.log(i);
    } 
}

// Nested loop 
var myArray = [
    [2, 5, 7],
    [3, 7, 1],
    [9, 5, 2],
    [0, 3, 6],
]
for (var i = 0; i < myArray.length; i++) {
    console.log(myArray[i]);
}
for (var i = 0; i < myArray.length; i++) {
    for(var j = 0; j < myArray[i].length; j++){
        console.log(myArray[i][j]);
    }
}
var numberArray = [];
var j = 0;
for (var i = 0; i < 1000; i++ ){
    if (i % 35 === 0) {
    console.log(i);
    numberArray[j] = i;
    j = j + 1;
    }
}
console.log(numberArray.length);
var numberArray2 = [];
var j = 0;
for (var i = 1000; i > 0; i--) {
    if (i % 45 ===0) {
        console.log(i);
        numberArray2[j] = i;
        j = j + 1;
    }
}
console.log(numberArray2);




